<?php
    class homework{

        private $min;
        private $max;
        private $divisor;
        private $result = [];
        private $cities = [];
        private $translit = [];
        private $menu = [];

        public function __construct(){
            $this->cities = [
                "Московская область" => ["Наро-Фоминский", "Балашиха", "Белоозёрский", "Бронницы", "Верея", "Видное", "Волоколамск", "Воскресенск", "Высоковск", "Голицыно", "Дедовск", "Дзержинский", "Дмитров", "Долгопрудный", "Домодедово", "Дрезна", "Дубна", "Егорьевск", "Жуковский", "Зарайск", "Звенигород", "Ивантеевка", "Истра", "Кашира", "Клин", "Коломна", "Королёв", "Котельники", "Красноармейск", "Красногорск", "Краснозаводск", "Краснознаменск", "Кубинка", "Куровское", "Ликино-Дулёво", "Лобня", "Лосино-Петровский", "Луховицы", "Лыткарино", "Люберцы", "Можайск", "Мытищи", "Наро-Фоминск", "Ногинск", "Одинцово", "Озёры", "Орехово-Зуево", "Павловский Посад", "Пересвет", "Подольск", "Протвино", "Пушкино", "Пущино", "Раменское", "Реутов", "Рошаль", "Руза", "Сергиев Посад", "Серпухов", "Солнечногорск", "Старая Купавна", "Ступино", "Талдом", "Фрязино", "Химки", "Хотьково", "Черноголовка", "Чехов", "Шатура", "Щёлково", "Электрогорск", "Электросталь", "Электроугли", "Яхрома"],

                "Владимирская область" => ["Александров", "Владимир", "Вязники", "Гороховец", "Гусь-Хрустальный", "Камешково", "Карабаново", "Киржач", "Ковров", "Кольчугино", "Костерёво", "Курлово", "Лакинск", "Меленки", "Муром", "Петушки", "Покров", "Радужный", "Собинка", "Струнино", "Судогда", "Суздаль", "Юрьев-Польский"],

                "Ярославская область" => ["Гаврилов-Ям", "Данилов", "Любим", "Мышкин", "Переславль-Залесский", "Пошехонье", "Ростов", "Рыбинск", "Тутаев", "Углич", "Ярославль"],
            ];

            $this->translit = ["а"=>"a","б"=>"b","в"=>"v","г"=>"g","д"=>"d","е"=>"e","ё"=>"e","ж"=>"j","з"=>"z","и"=>"i","й"=>"y","к"=>"k","л"=>"l","м"=>"m","н"=>"n","о"=>"o","п"=>"p","р"=>"r","с"=>"s","т"=>"t","у"=>"u","ф"=>"f","х"=>"h","ц"=>"c","ч"=>"ch","ш"=>"sh","щ"=>"shch","ы"=>"y","э"=>"e","ю"=>"yu","я"=>"ya","ъ"=>"","ь"=>""];

            $this->menu = [
                "Товары" => ["Алкоголь", "Хлебобулочные изделия", "Детские товары", "Оружие"],
                "О нас" => ["О компании", "Контакты", "Реквизиты"],
                "Гарантии" => ["Доставка", "Возвраты"],
            ];
        }

        public function first(int $min = 0, int $max = 0, int $divisor = 1){
            $this->min = $min;
            $this->max = $max;
            $this->divisor = $divisor;

            while (++$min <= $max){
                if (!($min % $divisor)) array_push($this->result, $min);
            }
            echo "Числа от {$this->min} до {$this->max}, делящиеся на {$this->divisor} без остатка: " . implode(", ", $this->result) . "<br>";
        }

        public function second(int $min = 0, int $max = 0){
            $this->min = $min;
            $this->max = $max;
            echo "Числа от {$this->min} до {$this->max}: <br>";
            do{
                echo $min;
                if ($min != 0) echo ($min % 2) ? " - нечетное" : " - четное";
                echo "<br>";
            }while ($min++ < $max);
        }

        public function third($letter = null){
            foreach($this->cities as $key => $value){
                echo "<strong>$key:</strong><br>";
                $array = array(); # Используем для решения 8 задачи. Если без 8 задачи, то можно сразу implode value делать и выводить.
                if (!is_null($letter)){
                    foreach($value as $city){
                        if (substr($city, 0, 2) == strtoupper($letter)) array_push($array, $city); // 2 из-за кирилицы
                    }
                }else{
                    $array = $value;
                }
                echo implode(", ", $array) . "<br><br>";
            }
        }

        public function getTranslit(string $str = ""){
            $str = strip_tags($str);
            $str = preg_replace ("/\s+/", " ", $str);
            $str = trim($str);
            $str = mb_strtolower($str);
            $str = strtr ($str, $this->translit);

            echo ucfirst($str) . "<br>"; // ucfirst для читабельности...
        }

        public function getMenu(){
            echo "<ul>";
            foreach ($this->menu as $key => $value){
                echo "<li>$key</li>";
                echo "<ul>";
                foreach ($value as $nextValue){
                    echo "<li>$nextValue</li>";
                }
                echo "</ul>";
            }
            echo "</ul>";
        }

        public function seventh(int $min = 0, int $max = 0){
            $this->min = $min;
            $this->max = $max;
            echo "Числа от {$this->min} до {$this->max}: <br>";
            for ($min; $min <= $max; print $min++ . " "){
                
            }
            echo "<br>";
        }

        public static function getUnderline(string $str = ""){
            $str = preg_replace ("/\s/", "_", $str);
            return $str . "<br>";
        }

        public function last(string $str = ""){
            $str = strip_tags($str);
            $str = preg_replace ("/\s/", "_", $str);
            $str = trim($str);
            $str = mb_strtolower($str);
            $str = strtr ($str, $this->translit);
            $str = preg_replace("/[^0-9a-z-_ ]/i", "", $str); // очищаем строку от недопустимых символов для URL

            echo $str . "<br>";
        }
    }
    
    $homework = new homework;
?>

<!-- 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка. -->

<?=$homework->first(0, 100, 3);?>

<!-- 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
0 – ноль.
1 – нечетное число.
2 – четное число.
3 – нечетное число.
…
10 – четное число. -->

<?=$homework->second(0, 10);?>

<!-- 3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким:
Московская область:
Москва, Зеленоград, Клин
Ленинградская область:
Санкт-Петербург, Всеволожск, Павловск, Кронштадт
Рязанская область … (названия городов можно найти на maps.yandex.ru) -->

<?=$homework->third();?>

<!-- 4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
Написать функцию транслитерации строк. -->

<?=$homework->getTranslit("Я у мамы    ВмЕсТо<br>   швабры!");?>

<!-- 5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку. -->

<?=homework::getUnderline("Жили у    бабуси    2 веселыъ гуся. Один серый, другой белый, оба - голубые.");?>

<!-- 6. В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP. Необходимо представить пункты меню как элементы массива и вывести их циклом. Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать. -->

<?=$homework->getMenu();?> <!-- Реализовал методом, для ускорения. Если нужно именно в шаблоне, могу вывести в конкретный шаблон и настроить стили. -->

<!-- 7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. То есть выглядеть должно так:
for (…){ // здесь пусто} -->

<?=$homework->seventh(0, 9);?>

<!-- 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К». -->

<?=$homework->third("К");?>

<!-- 9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах). -->

<?=$homework->last("Мы  задачи допилили   Вот и всё! Вот и всё       лалала...");?>